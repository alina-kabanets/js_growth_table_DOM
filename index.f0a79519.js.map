{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,SAAS,aAAa,CAAC,cACnC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAElD,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAO,SAAS,gBAAgB,CAAC,MAEvC,OAAQ,EAAE,MAAM,EACd,KAAK,EACH,EAAM,MAAM,CAAC,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,IAC/B,KACF,MAAK,EACH,CAAI,CAAC,EAAE,CAAC,MAAM,GAEd,KACF,MAAK,EACE,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAI,MAAM,CAAC,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,G,C,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,KACF,MAAK,EACE,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,KAAK,CAAC,EAAE,CAAC,MAAM,E,C,M,E,CADhB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAMT,CAEA,EAAgB,QAAQ,CAAG,EAAM,IAAI,CAAC,MAAM,EAAI,GAChD,EAAgB,QAAQ,CAAG,EAAM,IAAI,CAAC,MAAM,EAAI,EAChD,EAAmB,QAAQ,CAAG,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,GAC5D,EAAmB,QAAQ,CAAG,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,CAC9D,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tbody = document.querySelector(\"tbody\");\nvar container = document.querySelector(\".container\");\nvar appendRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar appendColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\ncontainer.addEventListener(\"click\", function(e) {\n    var rows = document.querySelectorAll(\"tr\");\n    switch(e.target){\n        case appendRowButton:\n            tbody.append(rows[0].cloneNode(true));\n            break;\n        case removeRowButton:\n            rows[0].remove();\n            break;\n        case appendColumnButton:\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    row.append(row.cells[0].cloneNode(true));\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            break;\n        case removeColumnButton:\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var row1 = _step1.value;\n                    row1.cells[0].remove();\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            break;\n        default:\n    }\n    appendRowButton.disabled = tbody.rows.length >= 10;\n    removeRowButton.disabled = tbody.rows.length <= 2;\n    appendColumnButton.disabled = tbody.rows[0].cells.length >= 10;\n    removeColumnButton.disabled = tbody.rows[0].cells.length <= 2;\n});\n\n//# sourceMappingURL=index.f0a79519.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\nconst container = document.querySelector('.container');\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\ncontainer.addEventListener('click', (e) => {\n  const rows = document.querySelectorAll('tr');\n\n  switch (e.target) {\n    case appendRowButton:\n      tbody.append(rows[0].cloneNode(true));\n      break;\n    case removeRowButton:\n      rows[0].remove();\n\n      break;\n    case appendColumnButton:\n      for (const row of rows) {\n        row.append(row.cells[0].cloneNode(true));\n      }\n      break;\n    case removeColumnButton:\n      for (const row of rows) {\n        row.cells[0].remove();\n      }\n      break;\n\n    default:\n  }\n\n  appendRowButton.disabled = tbody.rows.length >= 10;\n  removeRowButton.disabled = tbody.rows.length <= 2;\n  appendColumnButton.disabled = tbody.rows[0].cells.length >= 10;\n  removeColumnButton.disabled = tbody.rows[0].cells.length <= 2;\n});\n"],"names":["tbody","document","querySelector","container","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","addEventListener","e","rows","querySelectorAll","target","append","cloneNode","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","cells","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","row1","disabled","length"],"version":3,"file":"index.f0a79519.js.map"}